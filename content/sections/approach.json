{
    "expands": [      
      {
        "title": "Results.",
        "content": "Your website is a business, not a hobby. I use empathy, nerdery, and the scientific process to optimize for results. Because any other approach is like throwing darts: fun, especially when drunk, but not productive.\n\nI believe that all websites, books, products, etc should have a clearly defined purpose (while staying open to iteration) before the build process starts.\n\nWhy are we doing this?\n\nWhat are our values and goals?\n\nWhat and who are we trying to change?\n\nWhat would success look like for us?\n\nAttractive design and clean code are ubiquitous these days. But if we don’t take an emotional deep-dive to answer these questions… who cares? Sure we’ll have a pretty product. But will we have the *right* pretty product?\n\nWhen we focus on results, it quickly becomes clear that the “why” is not “to make a cool app” or “to build a pretty website”. So then, we realize that the code is but a means to an end. Whether we end up building something from scratch or pulling off a glorified open source duct-tape job… it makes no difference.\n\nWell, actually, it *does* make a difference. The duct-tape path, when available, wins every time. Because speed. The goal is the result, and any frivolous steps on that journey are a distraction.\n\nFor example, Luxonis needed [a new website](https://luxonis.com/). The “why” was to create a unified front for all of our projects (as they’d been spread out across 3 different websites before that) and to convey technological capability through polished copy and a polished design, so that when people found our website via our Crowd Supply campaign... they’d have zero seed of a doubt as to whether or not we could deliver on our promise.\n\nThe purpose was not “to make a website”. Which was a relief, because I had to do this task using only spare hours found ‘neath the cracks between other projects. So rather than *actually* make a website, I just forked [this](https://github.com/creativetimofficial/vue-argon-design-system), made a few tweaks, and called it a day. And as a fun bonus, I got to learn [Vue](https://cli.vuejs.org/guide/), which is now a part of my default stack!\n\nNot dissimilar was the Machine Learning work I did, which was based on the premade  [Deeplabv3+](https://github.com/tensorflow/models/tree/master/research/deeplab), then trained with a premade dataset, then patched with code almost entirely found on either [GitHub](https://github.com/) or [Stack Overflow](https://stackoverflow.com/).\n\nSure I *could* make things from scratch. And for many many years I did. I took great pride in doing so, despising WordPress developers and laughing at people who needed frameworks like Bootstrap. I built [this](https://pickmonitor.com/),  [this](https://dealcatcher.com/), and  [this](https://apps.apple.com/us/app/dealcatcher-coupons-deals-shopping-app/id534634276)  entirely from scratch, for example, even building a custom MVC framework because I was so obsessed with the ego of my custom creations.\n\nThen, through life events such as divorce, failed businesses, therapy, and travel, my ego started to shrivel (but still lingers, obviously) and I realized I was being an idiot. Or more accurately, my static cling to customization was no more than a twisted, illogical attempt at feeling important.\n\nThese days every one of my web projects starts with a framework like Nuxt, Lumen, or Gatsby. Most “custom” designs are merely retoolings of things found on [Sketch Repo](https://sketchrepo.com/). Almost all chunks of code come from GitHub or from places like  [pyimagesearch](https://www.pyimagesearch.com/).\n\nOf course most people use frameworks, so I’m not seeking a cookie for that, but with my allergic reaction to reinventing the wheel I reckon that I spend less than a quarter of the time on your average task than your average creator. AND the results I cobble together are cleaner, faster, prettier, and more secure. Because a GitHub repo built over 8 months - even if it only takes 30 minutes to install, is generally more polished than a solution custom-coded over two weeks.\n\nSo if you’re looking to hire a developer who writes thousands of lines of code per day, pass on me. But if you’re looking to hire someone who gives zero shits about his code count - and instead funnels those shits into big picture results - I’m your guy."
      }
    ],
    "title": "Approach",
    "intro": "I’m a software engineer with a product brain. So while I know *how* to code, design, and copywrite... these are only tools. What excites me is connecting dots. Building bridges.\n\nIt's my job not just to dream, but to create pathways to reality. To build things that work - obviously - but that are also fun to use, affordable to build, and sustainable to maintain. \n\n When we work together you get:"
  }